import { Context } from 'telegraf';

import { Controller, Hears, OnUpdate } from '../shared/core/bot/Controller';
import { Messages } from '../shared/messages';

export class ServicesController extends Controller {

	@Hears(/^üí• –ü–æ–º–æ—â—å —Å –ø—Ä–æ–±–∏–≤–æ–º$/iu)
	static async breakoutHelp(ctx: Context) {
		const { message, extra } = Messages.services.breakoutHelp();

		await ctx.reply(message, extra);
	}

	@Hears(/^üö® –ü–æ–º–æ—â—å —Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é$/iu)
	static async realEstateAssistance(ctx: Context) {
		const { message, extra } = Messages.services.realEstateAssistance();

		await ctx.reply(message, extra);
	}

	@OnUpdate('message')
	static async breakoutHelpCommand(ctx: Context, next: () => any) {
		const text = ((ctx.message as any).text ?? '').trim();

		let replyMessage = '';

		switch (text) {
			case '–öp–µ–¥–∏—Ç–Ω—ã–π p–µ–π—Ç–∏–Ω–≥ 1500‚ÇΩ —ç–ª.–¥–æ–∫':
			case '–üp–æ–≤–µp–∫a –Ω–∞ –ëa–Ω–∫—Ä–æ—Ç—Å—Ç–≤o - 1500‚ÇΩ —ç–ª.–¥–æ–∫':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ ‚Ññ –ò–ù–ù —Ñ–∏–∑. –ª–∏—Ü–∞ –∏ –¥–∞—Ç—É –≤—ã–¥–∞—á–∏,–µ–≥–æ –§–ò–û, —Ä–µ–≥–∏–æ–Ω ‚ÑπÔ∏è';
				break;
			
			case '–üpo–≤–µ—Ä–∫–∞ –ì–ò–ë–î–î - 3000‚ÇΩ —ç–ª.–¥–æ–∫':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –§–ò–û, ‚Ññ –∏ –¥–∞—Ç—É –≤—ã–¥–∞—á–∏ –í–£, —Ä–µ–≥–∏–æ–Ω –≤—ã–¥–∞—á–∏ –∏ ‚Ññ –æ—Ç–¥–µ–ª–µ–Ω–∏—è ‚ÑπÔ∏è';
				break;

			case '–§op–ºa 1 –ø—Äo–≤–µp–∫a –øa—Å–ø–æ—Ä—Ça P–§ –Ω–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å - 3500‚ÇΩ —ç–ª.–¥–æ–∫':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –§–ò–û, ‚Ññ –∏ —Å–µ—Ä–∏—é, –¥–∞—Ç—É –≤—ã–¥–∞—á–∏, –∫–µ–º –≤—ã–¥–∞–Ω, –∫–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è ‚ÑπÔ∏è';
				break;

			case '–ù–∞–ª–∏—á–∏–µ co–±—Å—Ç–≤e–Ω–Ωoc—Ç–∏ - –ù–∞–ª–æ–≥–æ–≤a—è - 3500‚ÇΩ —ç–ª.–¥–æ–∫':
			case '–ù–∞–ª–∏—á–∏–µ co–±—Å—Ç–≤e–Ω–Ωoc—Ç–∏ - P–æ—Åpee—Å—Çp - 5000‚ÇΩ —ç–ª.–¥–æ–∫':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –§–ò–û –∏ –ò–ù–ù - —Ñ–∏–∑. –ª–∏—Ü–∞  üëâ –ò–ù–ù –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ - —é—Ä. –ª–∏—Ü–∞ ‚ÑπÔ∏è';
				break;

			case '–ö–æ–º—É –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç #Ô∏è‚É£ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ë–∏–ª–∞–π–Ω - 3000‚ÇΩ –ú–¢–° - 3500‚ÇΩ –ú–µ–≥a—Ñ–æ–Ω - 4500‚ÇΩ –¢E–õE2 - 7500‚ÇΩ':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ ‚Ññ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚ÑπÔ∏è';
				break;

			case '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ä–∞—Å—á–µ—Ç–Ω—ã–º —Å—á–µ—Ç–∞–º (–Æ–õ) (–≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏) - –æ—Ç 50000‚ÇΩ —ç–ª.–¥–æ–∫':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –ò–ù–ù –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ - —é—Ä. –ª–∏—Ü–∞ ‚ÑπÔ∏è';
				break;

			default:
				return next();
		}

		const { message, extra } = Messages.services.breakoutHelpMessage(replyMessage);
		await ctx.reply(message, extra);
	}

	@OnUpdate('message')
	static async realEstateAssistanceCommand(ctx: Context, next: () => any) {
		const text = ((ctx.message as any).text ?? '').trim();

		let replyMessage = '';

		switch (text) {
			case '–í—ã–ø–∏—Å–∫–∞ E–ìP–ù (1 –¥e–Ω—å) - 500‚ÇΩ —ç–ª.–¥–æ–∫ / 1500‚ÇΩ —Å –øe—áa—Ç—å—é':
			case '–ü–ª–∞–Ω –ë–¢–ò –úo—Å–∫–≤–∞ (1 –¥e–Ω—å) - 3500‚ÇΩ —ç–ª.–¥–æ–∫':
			case '–ü–ª–∞–Ω –ë–¢–ò –ù–æ–≤a—è –úoc–∫–≤–∞/–úO (1 –¥e–Ω—å)- 5000‚ÇΩ —ç–ª.–¥–æ–∫':
			case '–¢–µ—Ö –øa—Å–øop—Ç –ë–¢–ò –ú–æc–∫–≤–∞ /–úO (1 –¥e–Ω—å ) - o—Ç 5500‚ÇΩ':
			case '–ê—Ä—Ö–∏–≤–Ω–∞—è –≤—ã–ø–∏c–∫a –úo—Å–∫–≤a (1 –¥–µ–Ω—å) —ç–ª/–ø–µ—á–∞—Ç—å - 3500/5000‚ÇΩ':
			case '–ò—Å—Çop–∏—è –ø–µp–µ—Ö–æ–¥–∞ –ø—Äa–≤–∞ –úo—Å–∫–≤–∞ —ç–ª/—Å –ø–µ—á–∞—Ç—å—é (1 –¥e–Ω—å) - 800/3500‚ÇΩ':
			case 'Cpo—á–Ωoe –ì–ü–ó–£ –∑a 1 –¥e–Ω—å –æ—Ç 20000‚ÇΩ':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –∞–¥—Ä–µ—Å –∏ –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä ‚ÑπÔ∏è';
				break;
			
			case '–°–ø—Ä–∞–≤–∫–∞ –î–ì–ò (–î–ñ–ü) (1 –¥e–Ω—å) - 3000‚ÇΩ':
			case '–ï–ñ–î —ç–ª/c –ø–µ—áa—Ç—å—é - 4000/6500‚ÇΩ':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –∞–¥—Ä–µ—Å –∏ –§–ò–û —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞ ‚ÑπÔ∏è';
				break;

			case '–°–ø—Ä–∞–≤–∫–∞ –∞—Ä—Ö–∏–≤–Ω–∞—è –¶–ê–ë –ú–æ—Å–∫–≤a/–ú–û - 1700‚ÇΩ —ç–ª.–¥–æ–∫':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –∞–¥—Ä–µ—Å –∏ –∏–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é ‚ÑπÔ∏è';
				break;

			case '–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø C–î–ï–õO–ö –° –ùE–î–í–ò–ñ–ò–úOC–¢–¨–Æ: –ú–û - –æ—Ç 11000‚ÇΩ':
			case '–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø C–î–ï–õO–ö –° –ùE–î–í–ò–ñ–ò–úOC–¢–¨–Æ: –úo—Å–∫–≤–∞ - –æ—Ç 9000‚ÇΩ':
			case '–£–∑–∞–∫–æ–Ω–∏–≤–∞–Ω–∏–µ –ª—é–±—ã—Ö –ø–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä–æ–≤–æ–∫':
			case '–£—Å–∫ope–Ω–∏e –ø—Ä–∏–≤–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ—Ç 25000‚ÇΩ':
			case '–ü–æ–ºo—â—å –≤ p–µ—àe–Ω–∏–∏ –øp–∏oc—Ça–Ω–æ–≤–∫–∏ –≤ –†o—Å—Ä–µe—Å—Çpe':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –∞–¥—Ä–µ—Å, –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä, –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏, –∫—É–¥–∞ –æ–±—Ä–∞—â–∞–ª–∏—Å—å, –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã ‚ÑπÔ∏è';
				break;

			case '–ü–æc—Ç–∞–Ω–æ–≤–∫–∞ –Ωa –∫–∞–¥ac—Çp–æ–≤—ã–π y—á—ë—Ç o–±—ä–µ–∫—Ço–≤ –Ωe–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –∞–¥—Ä–µ—Å, –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä, —Ä–∞–Ω–µ–µ –æ–±—Ä–∞—â–∞–ª–∏—Å—å –∏–ª–∏ –ø–µ—Ä–≤–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –†–æ—Å—Ä–µ–µ—Å—Ç—Ä? ‚ÑπÔ∏è';
				break;

			case '–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è –≤ P–æ—Å—Ä–µ–µc—Çp':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –∞–¥—Ä–µ—Å, –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä, –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏, –∫—É–¥–∞ –æ–±—Ä–∞—â–∞–ª–∏—Å—å, –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã - –ø—Ä–∏ –≤—Ç–æ—Ä–∏—á–Ω–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ ‚ÑπÔ∏è';
				break;

			case '–ü–æ–º–æ—â—å –≤ –ª–µ–≥–∞–ª–∏–∑–∞—Ü–∏–∏ o–±—ä–µ–∫—Ço–≤ c–∞–ºoc—Çpo—è':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –∞–¥—Ä–µ—Å, –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä, –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏, –∫—É–¥–∞ –æ–±—Ä–∞—â–∞–ª–∏—Å—å, –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã, —Å—É–¥–µ–±–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –∏–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é ‚ÑπÔ∏è';
				break;

			case '–ò–∑–ºe–Ω–µ–Ω–∏e –≤–∏–¥–æ–≤ pa–∑pe—à—ë–Ω–Ωo–≥o –∏—Å–ø–æ–ª—å–∑o–≤a–Ω–∏—è (–í–†–ò)':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –∞–¥—Ä–µ—Å, –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –í–†–ò, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏ ‚ÑπÔ∏è';
				break;

			case '–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –≤ –∞—Ä–±–∏—Ç—Ä–∞–∂–µ –Ω–∞ –ª—é–±–æ–º —ç—Ç–∞–ø–µ':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏, –Ω–æ–º–µ—Ä –¥–µ–ª–∞ –∏ –æ—Ñ—Ñ –ø–µ—Ä–µ–ø–∏—Å–∫—É ‚ÑπÔ∏è';
				break;

			case '–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –≤ –î–ì–ò –Ω–∞ —ç—Ç–∞–ø–µ –æ—Ü–µ–Ω–∫–∏ –∏ –≤—ã–∫—É–ø–∞':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –∞–¥—Ä–µ—Å, –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä, –ò–ù–ù –æ—Ä–≥. –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞, –ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å –î–ì–ò –ø–æ –≤–æ–ø—Ä–æ—Å—É –≤—ã–∫—É–ø–∞ (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)  ‚ÑπÔ∏è';
				break;

			case '–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –æ—Ü–µ–Ω–∫–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏':
				replyMessage = 'üëâ–ü—Ä–∏—à–ª–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –∑–∞–¥–∞—á—É ‚ÑπÔ∏è';
				break;

			default:
				return next();
		}

		const { message, extra } = Messages.services.breakoutHelpMessage(replyMessage);
		await ctx.reply(message, extra);
	}

	@Hears(/^üîô –ù–∞–∑–∞–¥$/iu)
	static async backToMain(ctx: Context) {
		const { message, extra } = Messages.main.start();
		await ctx.reply(message, extra);
	}
}
