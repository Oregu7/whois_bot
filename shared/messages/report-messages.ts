import { Markup } from 'telegraf';

import { MessageBuilder, Message } from '../core/classes';
import { UserEntity } from '../models';
import { CourtCase } from '../services/MosGorsudService';
import { Pagination } from '../utils/pagination';


export function balance(user: UserEntity): Message {
	const text = `‚ÜîÔ∏è –£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å <b>${user?.balance || 0}</b> –æ—Ç—á–µ—Ç(–æ–≤)`;

	return MessageBuilder.createMessage(text);
}

export function promoCode(): Message {
	const text = `üî∏üîπ–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ *Ô∏è‚É£*Ô∏è‚É£*Ô∏è‚É£-*Ô∏è‚É£*Ô∏è‚É£*Ô∏è‚É£`;

	return MessageBuilder.createMessage(text);
}

export function buyReports(reportsCount: number): Message {
	const text = `–ü–æ–∫—É–ø–∫–∞ ${reportsCount} –æ—Ç—á–µ—Ç–æ–≤. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É –≤ –†–æ–±–æ–∫–∞—Å—Å–µ`;

	const buttons = [
		[Markup.button.url('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–æ–±–æ–∫–∞—Å—Å—É', 'https://robokassa.com')],
	];

	return MessageBuilder.createMessage(text, { inlineKeyboard: buttons });
}

export function notFound(): Message {
	const text = `üö´ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å ‚úèÔ∏è\n
	–í—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è:`;

	const buttons = [
		[Markup.button.callback('üì≤ –í–≤–µ–¥–∏—Ç–µ –§–ò–û –¥–ª—è –ø–æ–∏—Å–∫–∞', '.')],
		[Markup.button.callback('üñå –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞', '.')],
	];

	return MessageBuilder.createMessage(text, { inlineKeyboard: buttons });
}

export function generateReport(courtCases: CourtCase[], pages: number): Message {
	const text = courtCases.map((courtCase: CourtCase) => {
		const report = `<b>–ó–∞–ø—Ä–æ—Å: ${courtCase.person} - ${courtCase.court}</b>
		<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–µ–ª–∞: ${courtCase.type}</b>
		<b>–°—Ç–∞—Ç—É—Å: ${courtCase.status}</b>
		–ù–æ–º–µ—Ä –¥–µ–ª–∞: <a href="${courtCase.url}">${courtCase.caseNumber}</a>
		–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${courtCase.state}
		–°—É–¥—å—è: ${courtCase.judge || '---'}
		–°—Ç–∞—Ç—å—è: ${courtCase.codexArticle || '---'}
		–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–µ–ª–∞: ${courtCase.category || '---'}`;

		return report;
	}).join('\n\n');

	const pagination = new Pagination('report');
	const buttons = pagination.createPagesInlineKeyboard('search', 1, pages);

	return MessageBuilder.createMessage(text, { inlineKeyboard: [buttons] });
}
